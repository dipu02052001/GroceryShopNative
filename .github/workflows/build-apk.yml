name: Build APK

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build Release APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          npm install

      - name: Install Android SDK
        uses: android-actions/setup-android@v2

      - name: Decode Keystore
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" | base64 --decode > android/app/my-release-key.keystore

      - name: Set up gradle.properties
        run: |
          echo "MYAPP_RELEASE_STORE_FILE=my-release-key.keystore" >> android/gradle.properties
          echo "MYAPP_RELEASE_KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> android/gradle.properties
          echo "MYAPP_RELEASE_STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> android/gradle.properties
          echo "MYAPP_RELEASE_KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> android/gradle.properties

      - name: Make gradlew executable
        run: chmod +x android/gradlew


      - name: Build APK
        run: |
          cd android
          ./gradlew assembleRelease

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: android/app/build/outputs/apk/release/app-release.apk

      - name: List APK files for verification
        run: |
           ls -l android/app/build/outputs/apk/release/
           cp android/app/build/outputs/apk/release/app-release.apk docs/grocery-app.apk

      # - name: Upload APK artifact
      #   uses: actions/upload-artifact@v3.1.2
      #   with:
      #     name: release-apk
      #     path: android/app/build/outputs/apk/release/app-release.apk
